/*
 * Game.cpp
 *
 *  Created on: 9 Jan, 2015
 *      Author: daniel
 */

#include "Game.h"
#include "Board.h"
#include <cstdlib>
#include <iostream>
#include <sstream>
#include <memory>

using namespace mastermind;
using namespace std;

enum class Color
{
	Black,
	Red,
	Green,
	Yellow,
	Blue,
	Magenta,
	Cyan,
	White
};

namespace
{

template<typename T>
ostream& operator<<(ostream& os, const vector<T>& row)
{
	for (auto f : row) {
		string prefix = "";
		string postfix = "";
		if (f == Correct) {
			prefix = BoldGreenPrefix;
			postfix = ResetColor;
		}
		os << prefix << f << postfix;
	}
	return os;
}

template<typename T, Color color>
string boldColorPrint(const T& text)
{
	string out = "";
	switch (color) {
	case Color::Black: break;
	case Color::Red: {
		out += BoldRedPrefix;
		break;
	}
	case Color::Green: {
		out += BoldGreenPrefix;
		break;
	}
	case Color::Yellow: break;
	case Color::Blue: break;
	case Color::Magenta: break;
	case Color::Cyan: break;
	case Color::White: break;
	default: break;
	}
	out += text + ResetColor;
	return out;
}

template <typename T>
using ColorText = string(*)(const T&);
ColorText<string> BoldRed = boldColorPrint<string, Color::Red>;
ColorText<string> BoldGreen = boldColorPrint<string, Color::Green>;

} //unnamed namespace

Game::Game() : maxAttempts(10), codeLength(4)
{
}

Game::~Game()
{
}

vector<int> Game::readGuess() {
	char c;
	vector<int> guess;
	while (cin >> c) {
		guess.push_back(atoi(&c));
		if (guess.size() == (unsigned) (codeLength)) break;
	}

	return guess;
}

void Game::play()
{
	Board board(codeLength);
	cout << BoldGreen("Game started, you have " + to_string(maxAttempts) + " chances!") << endl;
	for (int attempt = 1; attempt <= maxAttempts; ++attempt) {
		cout << "Attempt #" << attempt << ": ";
		vector<char> hint = board.getHint(readGuess());
		cout << hint << endl;
		if (board.isCodeCracked(hint)) {
			cout << BoldGreen("Code is correct, you won!!!") << endl;
			return;
		}
	}
	cout << "You lost :(." << "The code is: " << BoldRed(board.secretCode()) << endl;
}

void Game::showOpeningScreen()
{
	cout << BoldGreen("WELCOME TO MASTERMIND GAME") << endl;
	cout << endl;
	cout << "In this version, instead of 8 possible colors, " << BoldGreen("10 integers from 0 to 9")
		 << " are used." << endl;
	cout << "Instead of black/white pegs as hints, letter \'C\' and \'M\' are used respectively." << endl;
	cout << endl;
	cout << BoldGreen("How to play:") << endl;
	cout << "1. User needs to guess correctly the 4-digit integer code generated by the game.\n"
		 << "   Each digit is an integer from 0 to 9" << "\n"
		 << "2. User is allowed maximum 10 attempts.\n"
		 << "3. Enter the 4-digit guess without space or tab in between, then press \'enter\' to lock it in.\n"
		 << "   Any input that is entered after the 4th digit will be ignored.\n"
		 << "4. Upon pressing \'enter\' the code will be evaluated and the feedback will be displayed, represented by:\n"
		 << "   a. Letter \'C\' for every digit that exists and is in the correct place.\n"
		 << "   b. Letter \'M\' for every digit that exists but is misplaced.\n";
	cout << endl;
}
